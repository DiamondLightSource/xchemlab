version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      - ..:/workspace:z
    command: sleep infinity
    environment:
      OPA_URL: http://opa:8181
      DATABASE_URL: postgres://postgres:password@postgres
      RABBITMQ_URL: amqp://rabbitmq:password@rabbitmq
      LOG_LEVEL: DEBUG
      OTEL_COLLECTOR_URL: http://collector:4317

  frontend:
    image: docker.io/library/node:20.6.0-bookworm
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ..:/workspace:z
    command: sleep infinity
    environment:
      SCHEMA_PATH: http://backend

  opa:
    image: docker.io/openpolicyagent/opa:0.53.1
    volumes:
      - ../policies:/policies:z
    command:
      - run
      - --server
      - --watch
      - /policies

  postgres:
    image: docker.io/library/postgres:15.3-bookworm
    environment:
      POSTGRES_PASSWORD: password

  rabbitmq:
    image: docker.io/library/rabbitmq:3.12.1
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: password

  s3:
    image: localstack/localstack:2.2.0
    volumes:
      - ./localstack-setup.sh:/etc/localstack/init/ready.d/setup.sh

  collector:
    image: docker.io/otel/opentelemetry-collector:0.91.0
    restart: unless-stopped
    ports:
      - 55679:55679
    volumes:
      - ./collector.yaml:/etc/otelcol/config.yaml

  jaeger:
    image: docker.io/jaegertracing/all-in-one:1.52.0
    restart: unless-stopped
    ports:
      - 16686:16686

  prometheus:
    image: docker.io/prom/prometheus:v2.48.1
    restart: unless-stopped
    ports:
      - 9091:9090
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
